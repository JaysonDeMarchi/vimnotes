*notes.txt*                 My Notes                                   *notes*
" vim: filetype=help foldmethod=marker modifiable noreadonly

==============================================================================
Deleting:
    `x`     - deletes the current character
    `dd`    - deletes the current line

==============================================================================
Moving content:
    `m`     -  `m`ark uses the file line index to determine where to move the
                current line. For better visualization when moving content
                enable line numbers (`:se number`)

    `m+1`   - moves the current line visually down one row (but up one in the
              index)
    `m-2`   - moves the current line visually up one row
    `m1`    - moves the current line visually to the second row in the file
              (index starts at 0)
==============================================================================
Moving/Navigating the cursor:
    Vim supports arrow keys. `h`,`j`,`k`,`l` are also mapped to navigation
    
    `h`     - `<LEFT>`
    `j`     - `<DOWN>`
    `k`     - `<UP>`
    `l`     - `<RIGHT>`

    These mappings are more useful when writing commands than in practical use
    since they take up less space.
    e.g. >
        " Creates a comment block, `/**  */`, with the cursor between the
        " spaces
        inoremap /**<SPACE> /**<SPACE><SPACE>*/hhh
    <

==============================================================================
Jumping:
    The default `:` function in normal mode is jumping.
    `:1`    - jumps to line 1.
    `G`     - `G`o down to the bottom of the file. Jumps to the end of file.

==============================================================================
Searching:
    `/`     - `s`lash is Vim's CTRL-F.
    `/map`  - searches for the word "map"
    `n`     - `n`ext will jump to the next match on our current search.
              `n` uses the cursor's current position and has no reference to
              the previous match you jumped to.
    `N`     - `N`prev? `N` moves to the previous match.

==============================================================================
Copy/Pasting:
    `y`     - `y`ank or Vim's copy.
    `yy`    - copies the entire line. When you paste an entire line a new line
              is created below the cursor and the content is added there.

    `p`     - `p`ut or Vim's paste. `p` will take whatever the last edit made
              in normal mode, so if you copy a line (`yy`), delete a line
              (`dd`), then paste the line you will paste the deleted line.
